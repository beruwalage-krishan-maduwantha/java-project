/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package connect.me;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author Krishan
 */
public class Search_Employee extends javax.swing.JFrame {

    /**
     * Creates new form Search_Employee
     */
    public Search_Employee() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lbl1 = new javax.swing.JLabel();
        BN = new javax.swing.JRadioButton();
        BD = new javax.swing.JRadioButton();
        lbl3 = new javax.swing.JLabel();
        lbl5 = new javax.swing.JLabel();
        txtSBN = new javax.swing.JTextField();
        txtSBD = new javax.swing.JTextField();
        butSearch = new javax.swing.JButton();
        butback = new javax.swing.JButton();
        lbl6 = new javax.swing.JLabel();
        lbl7 = new javax.swing.JLabel();
        lbl8 = new javax.swing.JLabel();
        lbl9 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        txtDep = new javax.swing.JTextField();
        txtdesi = new javax.swing.JTextField();
        butJI = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl1.setText("Search Employee");

        buttonGroup1.add(BN);
        BN.setText("By Name");
        BN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BNActionPerformed(evt);
            }
        });

        buttonGroup1.add(BD);
        BD.setText("By Department");
        BD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDActionPerformed(evt);
            }
        });

        lbl3.setText("Search by Name");

        lbl5.setText("Search by Department");

        butSearch.setText("Search");
        butSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSearchActionPerformed(evt);
            }
        });

        butback.setText("Back");
        butback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butbackActionPerformed(evt);
            }
        });

        lbl6.setText("Employee Name");

        lbl7.setText("Employee ID");

        lbl8.setText("Department");

        lbl9.setText("Designation");

        butJI.setText("Update Information");
        butJI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butJIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BN, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BD)
                            .addComponent(lbl5))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtSBN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 290, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtSBD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(145, 145, 145)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl6, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(lbl7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtName)
                                    .addComponent(txtDep, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                    .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                    .addComponent(txtdesi))))
                        .addContainerGap(47, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(butback)
                        .addGap(43, 43, 43)
                        .addComponent(butSearch)
                        .addGap(39, 39, 39)
                        .addComponent(butJI)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(BN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(BD, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(butSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(butback, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(butJI))
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtdesi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butbackActionPerformed
if(LoginInfo.Luser.equals("HR Assistant"))
        {
            HR_Assistant_Dashboard toHR_Assistant_Dashboard = new HR_Assistant_Dashboard();
            toHR_Assistant_Dashboard.setVisible(true);
            dispose();
        }
        else if(LoginInfo.Luser.equals("HR Manager"))
        {
            HR_Manager_Dashboard toHR_Manager_Dashboard = new HR_Manager_Dashboard();
            toHR_Manager_Dashboard.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_butbackActionPerformed

    private void BNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BNActionPerformed
        txtSBN.setText("");
        txtSBD.setText("");
        txtSBN.setEnabled(true);
        txtSBD.setEnabled(false);
    }//GEN-LAST:event_BNActionPerformed

    private void BDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDActionPerformed
        txtSBN.setText("");
        txtSBD.setText("");
        txtSBN.setEnabled(false);
        txtSBD.setEnabled(true);
    }//GEN-LAST:event_BDActionPerformed

    private void butSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSearchActionPerformed
        if ((BN.isSelected() == true) || (BD.isSelected() == true)) 
        {
            String Empname = "";
            String Dep = "";

                if (BN.isSelected() == true) 
                {
                    Empname = txtSBN.getText().trim();
                } else if (BD.isSelected() == true) 
                {
                    Dep = txtSBD.getText().trim();
                }

            String filePath = "EmployeeData.txt";

            try (BufferedReader br = new BufferedReader(new FileReader(filePath))) 
            {
                String line;
                String EmployeeName = "";
                String EmployeeID = "";
                String Department = "";
                String Designation = "";

                boolean isValidLogin = false;

                while ((line = br.readLine()) != null) 
                {
                    // Read employee details
                    if (line.startsWith("Employee Name:")) 
                    {
                        EmployeeName = line.split(":")[1].trim();
                    } 
                    else if (line.startsWith("Employee ID:")) 
                    {
                        EmployeeID = line.split(":")[1].trim();
                    } 
                    else if (line.startsWith("Department:")) 
                    {
                        Department = line.split(":")[1].trim();
                    } 
                    else if (line.startsWith("Designation:")) 
                    {
                        Designation = line.split(":")[1].trim();

                        // If searching by name
                        if (!Empname.isEmpty() && EmployeeName.equals(Empname)) 
                        {
                            isValidLogin = true;
                        }

                        // If searching by department
                        if (!Dep.isEmpty() && Department.equals(Dep)) 
                        {
                            isValidLogin = true;
                        }

                        if (isValidLogin) 
                        {
                            // Display the data if a valid employee is found
                            txtName.setText(EmployeeName);
                            txtID.setText(EmployeeID);
                            txtDep.setText(Department); 
                            txtdesi.setText(Designation);  
                            
//                            String[] array = Designation.split("/");
//                            for (String item : array) 
//                            {                                
//                                if(item.equals(null))
//                                {
//                                }
//                                else
//                                {
//                                    
//                                }     
//                            }

                            JOptionPane.showMessageDialog(this, "Employee Found!", "Search Result", JOptionPane.INFORMATION_MESSAGE);
                            break;  // Exit the loop once the employee is found
                        }

                        // Reset variables for next Employee
                        EmployeeName = "";
                        EmployeeID = "";
                        Department = "";
                        Designation = "";
                        isValidLogin = false;
                    }
                }

                if (!isValidLogin) 
                {
                    JOptionPane.showMessageDialog(this, "Employee not found!", "Search Result", JOptionPane.WARNING_MESSAGE);
                }
            } 
            catch (IOException ex) 
            {
                JOptionPane.showMessageDialog(this, "Error reading the file.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } 
        else 
        {
            JOptionPane.showMessageDialog(this, "Please enter either a Employee Name or Employee ID to search.", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
                     
    }//GEN-LAST:event_butSearchActionPerformed

    private void butJIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butJIActionPerformed
    String EmployeeName = txtName.getText().trim();
    String EmployeeID = txtID.getText().trim();
    String Department = txtDep.getText().trim();
    String Designation = txtdesi.getText().trim();
    
    // Validate input fields
    if (EmployeeName.isEmpty() || EmployeeID.isEmpty() || Department.isEmpty() || Designation.isEmpty()) 
    {
        JOptionPane.showMessageDialog(this, "All fields must be filled out.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    String filePath = "EmployeeData.txt";
    StringBuilder fileContent = new StringBuilder();

    boolean EmployeeUpdated = false;
    
    try (BufferedReader br = new BufferedReader(new FileReader(filePath))) 
    {
        String line;
        boolean isUpdatingCurrentEmployee = false;
      
        while ((line = br.readLine()) != null)
        {
            if (line.startsWith("Employee Name: ") && line.split(":")[1].trim().equals(EmployeeName)) 
            {
                isUpdatingCurrentEmployee = true;
            }  
        // Update the Employee's information if we're on the correct Employee block
            if (isUpdatingCurrentEmployee) 
            {
                if (line.startsWith("Employee Name: ")) 
                {
                    line = "Employee Name: "+ EmployeeName;
                } 
                else if (line.startsWith("Employee ID: ")) 
                {
                    line = "Employee ID: " + EmployeeID;
                } 
                else if (line.startsWith("Department: ")) 
                {
                    line = "Department: " + Department;
                } 
                else if (line.startsWith("Designation: ")) 
                {
                    line = "Designation: " + Designation;
                     EmployeeUpdated = true;
                    isUpdatingCurrentEmployee = false;
                } 
            
                
            }
       fileContent.append(line).append("\n");
        }
        // If we updated the Employee, write the new content back to the file
        if (EmployeeUpdated) 
        {
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) 
            {
                writer.write(fileContent.toString());
                JOptionPane.showMessageDialog(this, "Employee information updated successfully.", "Update Success", JOptionPane.INFORMATION_MESSAGE);
            }
        } 
        else 
        {
            JOptionPane.showMessageDialog(this, "Employee not found or no changes made.", "Update Failed", JOptionPane.WARNING_MESSAGE);
        }
    } 
    catch (IOException ex) 
    {
        JOptionPane.showMessageDialog(this, "Error reading or writing the file.", "File Error", JOptionPane.ERROR_MESSAGE);
    }
        
        
        
        
    }//GEN-LAST:event_butJIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search_Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search_Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search_Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search_Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search_Employee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton BD;
    private javax.swing.JRadioButton BN;
    private javax.swing.JButton butJI;
    private javax.swing.JButton butSearch;
    private javax.swing.JButton butback;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl5;
    private javax.swing.JLabel lbl6;
    private javax.swing.JLabel lbl7;
    private javax.swing.JLabel lbl8;
    private javax.swing.JLabel lbl9;
    private javax.swing.JTextField txtDep;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSBD;
    private javax.swing.JTextField txtSBN;
    private javax.swing.JTextField txtdesi;
    // End of variables declaration//GEN-END:variables

}